menu.file=&File
menu.edit=&Edit
menu.view=&View
menu.tools=&Tool
menu.help=&Help
menu.zoom=&Zoom
menu.window=&Window
menu.recent=&Recent Campaigns
menu.map=&Map
menu.export=Export

# These next two are used internally but never appear on a menu item.  In order to prevent
# I18N from warning that they don't exist these lines have been added.
action.commitCommand=Not used (action.commitCommand)
action.cancelCommand=Not used (action.cancelCommand)

# In all cases in this file, any accelerator keystroke will automatically have the
# 'menuShortcut' key added to it.  For Windows this is the Ctrl key, on the Mac it's the
# Command key.  Other platforms may have yet other keys.
# IMPORTANT:  Do not add the platform-dependent menu modifier key to this file!
# If you add "ctrl", for example, the modifier will be ignored on Windows but will require
# Mac users to use Meta-Ctrl-C for a copy operation...

# File Menu
action.newCampaign=&New Campaign
action.loadCampaign=&Open Campaign...
#action.loadCampaign.accel=O
action.loadSaveDialog=DEBUG LOAD/SAVE
action.loadSaveDialog.accel=F5
action.saveCampaign=&Save Campaign
action.saveCampaign.accel=S
action.saveCampaignAs=Save Campaign &As...
action.saveCampaignAs.accel=A
action.saveMessageHistory=Save Message &History...
action.exportScreenShot=Screenshot
action.exportScreenShot.accel=shift S
action.exportScreenShotAs=Screenshot As...

action.addIconSelector=Add To Resource &Library ...
action.addDefaultTables=Add Default Tables
#action.addIconSelector.accel=ctrl shift I

action.serverStart=Start Server...
action.clientConnect=Connect to Server...
action.clientDisconnect=Disconnect from Server...
action.showServerInfo=&Connection Information...

action.exit=E&xit

# Edit Menu
# For the Copy/Cut/Paste functions, the menu key shortcut will be added by the code.
# This is because the key is different on different platforms so it can't be represented here.
# The Mac uses "meta" while Windows uses "ctrl".  Sigh. :(
action.undoDrawing=Undo Drawing
action.undoDrawing.accel=Z
action.redoDrawing=Redo Drawing
action.redoDrawing.accel=R
action.clearDrawing=Clear Drawing
action.clearDrawing.accel=shift D

action.copyTokens=Copy
action.copyTokens.accel=C
action.cutTokens=Cut
action.cutTokens.accel=X
action.pasteTokens=Paste
action.pasteTokens.accel=V
action.campaignProperties=Campaign Properties...
action.preferences=Preferences...

# Map Menu
action.newMap=New Map...
action.newMap.accel=N
action.loadMap=&Import Map...
#action.loadMap.accel=L
action.saveMapAs=&Export Map...
#action.saveMapAs.accel=A
action.renameMap=Rename...
menu.QuickMap=Quick Map

action.hideMap=&Player Visible
action.hideMap.description=Toggle visibility of map to the players
action.hideMap.accel=H

action.enableFogOfWar=Fog-of-&War 
action.enableFogOfWar.description=Enable the fog of war for the current map
action.enableFogOfWar.accel=W

action.enableVision=Use Vision
action.enableVision.description=Use the Vision Blocking Layer on this map

action.adjustGrid=&Adjust Grid...
action.adjustGrid.accel=shift A
action.gridSize=Grid &Line Width

action.copyZone=Copy
action.removeZone=Delete
action.showLightSources=Show Light Sources
action.showLightSources.accel=K

menu.vision=Vision
visionType.OFF=Off
visionType.DAY=Day
visionType.NIGHT=Night

# View

action.zoomIn=Zoom &In
action.zoomIn.accel=typed =
action.zoomOut=Zoom &Out
action.zoomOut.accel=typed -
action.zoom100=Zoom 1:1
action.zoom100.accel=typed +

action.showNames=&Token Names
action.showNames.accel=T

action.showMovementMeasures=&Distances
action.showMovementMeasures.accel=D

action.showLightRadius=Token &Lights
action.showLightRadius.description=Causes light overlays to be enabled for all tokens that have a light source.
action.showLightRadius.accel=L

action.showGrid=&Grid
action.showGrid.accel=G
action.showCoordinates=&Coordinates

action.showMapSelector=&MiniMap
action.showMapSelector.accel=M

action.commandPanel=Command Panel

action.fullscreen=Fullscreen Mode
action.fullscreen.accel=alt ENTER

# Tool
action.sendChat=C&hat
action.sendChat.accel=ENTER
action.runMacro=&Run Macro
action.runMacro.accel=typed /
action.enforceView=&Center Players on Current View
action.enforceView.accel=F
action.enforceZone=&Enforce Players to Current Map
action.enforceZone.accel=E
action.linkPlayerView=Center Players on Current View (Continous)
action.linkPlayerView.accel=shift F
action.toggleMovementLock=&Lock Player Movement
action.zoomLock=Lock Zoom
action.toggleDrawMeasuements=Display Drawing &Distances
action.showPlayerView=Show As Player
action.showPlayerView.accel=shift P

# Help
action.showAboutDialog=&About
action.restoreDefaultImages=Restore &Default Images
action.showDocumentation=Documentation
action.showTutorials=Tutorials
action.showForums=Forums


# Other

action.bootConnectedPlayer=Boot
action.removeAssetRoot=Remove
action.debug.duplicateLastIcon=Duplicate Last Icon (debug)
action.toggleDoubleWide=&Straight Line Width Doubled
action.toggleDoubleWide.description=When selected the line template will straight lines at double width. 
action.toggleNewZonesHaveFOW=New Maps have Fog of War
action.toggleTokensStartSnapToGrid=Tokens Start Snap to Grid
action.useAlphaFog=Toggle Translucent Fog

action.autohideNewMaps=Autohide New Maps
action.autohideNewMaps.description=New maps start invisible to players
action.autohideNewIcons=Autohide New Tokens
action.autohideNewIcons.description=New tokens start invisible to players

action.newUnboundedMap=New Tiled Map...
action.newUnboundedMap.accel=shift N
action.setZoneGridColor=Set Grid Color...

action.refresh=Refresh
action.refresh.accel=F5

action.macro.new=Add New Macro
action.macro.edit=Edit
action.macro.delete=Delete
action.macro.duplicate=Duplicate
action.macro.reset=Reset
action.macro.runForEachSelected=Run for Each Selected
action.macro.export=Export
action.macro.import=Import
action.macro.importSet=Import Macro Set
action.macro.exportSet=Export Macro Set
action.macro.clearGroup=Clear Group
action.macro.clearPanel=Clear Panel
action.macro.addNewToSelected=Add New to Selected
action.macro.duplicateOnSelected=Duplicate Macro on Selected
action.macro.deleteFromCommon=Delete from Common
action.macro.exportCommon=Export Common Macro
action.macro.importToSelected=Import Macro to Selected
action.macro.importSetToSelected=Import Macro Set to Selected
action.macro.exportCommonSet=Export Common Macro Set
confirm.macro.delete=<html><body>You are about to delete the {0} macro.<br><br>Do you wish to continue?</body></html>
confirm.macro.exportInto=<html><body>You are about to export the {0} macro.<br><br>Do you wish to continue?</body></html>
confirm.macro.exportOverwrite=<html><body>You are about to overwrite an existing macro file.<br><br>Do you wish to continue?</body></html>
confirm.macro.exportSetInto=<html><body>You are about to export the current macro set.<br><br>Do you wish to continue?</body></html>
confirm.macro.exportSetOverwrite=<html><body>You are about to overwrite an existing macro set file.<br><br>Do you wish to continue?</body></html>
confirm.macro.failComparison=<html><body>Macro {0} has the following comparison criteria deselected: <br><ul>{1}</ul><br>Do you wish to add this macro to the export list?<br><br>Selecting "Yes" will result in the macro being exported without the information listed.</body></html>
confirm.macro.import=<html><body>The import macro {0} appears to match a macro that already exists {1}.  Do you wish to import the macro again?<br><br>Select "Yes" to import the macro anyway.  Select "No" to cancel import of the macro.<br><br>If you believe the macros are not the same, select "No" and verify the commonality criteria of the existing macro on the "Options" tab of its edit dialog.</body></html>
confirm.macro.panelLocation=within the {0} panel
confirm.macro.commonSelectionLocation=within the common selection macros
confirm.macro.tokenLocation=on {0}
confirm.macro.clearGroup=You are about to clear the {0} macro group.  Are you sure you want to continue?
confirm.macro.clearPanel=You are about to clear the {0} macro panel.  Are you sure you want to continue?
confirm.macro.checkComparisons=<html><body>Do you want to check comparison criteria for each common macro before adding it to the export list?<br><br>If you select "No", MapTool will not prompt you if any of a particular macro's commonality criteria are deselected.  A macro with deselected macro criteria may be exported with missing information.  For example, if a macro with "Command" comparison deselected is added to the export list, that macro will be exported without a command.</body></html>
confirm.macro.disallowPlayerEdits=<html><body>Are you sure you wish to prevent players from editing any macro common to this one?<br><br>Select "Yes" to continue with the change.  Select "No" to revert.</body></html>
confirm.macro.allowPlayerEdits=<html><body>Are you sure you wish to allow players from editing any macro common to this one?<br><br>Select "Yes" to continue with the change.  Select "No" to revert.</body></html>
msg.info.macro.exportCancel=<html><body>Macro export canceled.</body></html>
msg.info.macro.exportSuccess=<html><body>Macro exported successfully.</body></html>
msg.warning.macro.willNotExport=The macro "{0}" will not be exported.  Either it has been flagged by the GM as not player editable or you do not have ownership privileges over the source.</body></html>
msg.warning.macro.playerChangesNotAllowed=The GM has not allowed players to change this macro.
msg.error.macro.exportFail=<html><body>Macro could not be exported:<br><br>{0}</body></html>
msg.error.macro.importFail=<html><body>Macro could not be imported:<br><br>{0}</body></html>
msg.error.macro.exportSetFail=<html><body>Macro set could not be exported:<br><br>{0}</body></html>
msg.error.macro.importSetFail=<html><body>Macro set could not be imported:<br><br>{0}</body></html>
msg.error.macro.buttonPropsAreNull=Button properties are null.
msg.error.macro.buttonGroupDnDFail=Drag & Drop problem
component.areaGroup.macro.commonMacros=Common Macros
component.areaGroup.macro.noMacros=No Macros
component.dialogTitle.macro.macroID=Macro ID
component.tab.macro.details=Details
component.tab.macro.options=Options
component.label.macro.label=Label
component.label.macro.group=Group
component.label.macro.sortPrefix=Sort Prefix
component.label.macro.hotKey=Hot Key
component.label.macro.command=Command
component.label.macro.buttonColor=Button Color
component.label.macro.fontColor=Font Color
component.label.macro.fontSize=Font Size
component.label.macro.minWidth=Min Width
component.label.macro.maxWidth=Max Width
component.label.macro.toolTip=Tool Tip
component.label.macro.includeLabel=Include Label
component.label.macro.autoExecute=Auto Execute
component.label.macro.applyToSelected=Apply to Selected Tokens
component.label.macro.allowPlayerEdits=Allow Players to Edit Macro
component.label.macro.macroCommonality=Macro Commonality
component.label.macro.compareUseGroup=Use Group
component.label.macro.compareUseSortPrefix=Use Sort Prefix
component.label.macro.compareUseCommand=Use Command
component.label.macro.compareUseIncludeLabel=Use Include Label
component.label.macro.compareUseAutoExecute=Use Auto Execute
component.label.macro.compareApplyToSelected=Use Apply to Selected Tokens
component.tooltip.macro.label=This is the name that will appear on the macro button.
component.tooltip.macro.group=This is the group in the macro button panel in which this macro will appear.  If the group does not already exist, it will be created.
component.tooltip.macro.sortPrefix=This determines the order within its group that this macro will appear.
component.tooltip.macro.hotKey=This sets a hot key for this macro.  These hot keys are common across all macro panels.
component.tooltip.macro.includeLabel=Check here to include the macro's label with the macro output in chat.  Uncheck to only have the macro output appear in chat.
component.tooltip.macro.autoExecute=Check to run the macro as soon as its button is pressed.  Uncheck to impersonate (if applicable) and prepare the macro command in the command box.
component.tooltip.macro.applyToSelected=Check here to run this macro against the currently selected tokens.  Uncheck to run this macro outside of the context of any selected tokens.  If this macro references one or more token properties, it should be checked.
#TODO: Write tooltip for this.
component.tooltip.macro.buttonColor=Select the color of the face of this macro's button.
component.tooltip.macro.fontColor=Select the color in which the label for this macro's button will appear in the macro button panels.
component.tooltip.macro.fontSize=Selected the size of the font in which the label for this macro's button will appear in the macro button panels.
component.tooltip.macro.minWidth=Specify the minimum width this macro button should fill in a macro button panel.  If the label for the macro button exceeds this width, the button will grow to accomodate it. Leaving this filed blank will allow the button to shrink to auto-fit smaller labels.
component.tooltip.macro.maxWidth=Specify the maximum width this macro button should fill in a macro button panel.  If the label for the macro button exceeds this width, the label will be cut off.  Leaving this field blank will let the button auto-fit to the label length.
component.tooltip.macro.tooltip=Enter a tool tip for the macro button to display here.
component.tooltip.macro.allowPlayerEdits=Select this to allow players to edit this macro.
component.tooltip.macro.compareUseGroup=Check here to consider this macro's Group when determining its commonality with other macros.
component.tooltip.macro.compareUseSortPrefix=Check here to consider this macro's Sort Prefix when determining its commonality with other macros.
component.tooltip.macro.compareUseCommand=Check here to consider this macro's Command when determining its commonality with other macros.
component.tooltip.macro.compareUseIncludeLabel=Check here to consider this macro's Include Label state when determining its commonality with other macros.
component.tooltip.macro.compareUseAutoExecute=Check here to consider this macro's Auto Execute state when determining its commonality with other macros.
component.tooltip.macro.compareUseApplyToSelected=Check here to consider this macro's Use Apply to Selected Tokens state when determining its commonality with other macros.

msg.error.cantBootGM=You can't boot another GM.
msg.error.cantBootSelf=You can't boot yourself.  Disconnect the server via the File menu.
msg.error.failedToBoot=Boot attempt failed, player not found.
msg.error.mustSelectPlayerFirst=Select a player first.
msg.error.mustSelectRootGroup=Must select a root group.
msg.error.mustSelectAssetGroupFirst=Select an asset group first.
msg.error.gmRequired=Only GMs can do that.
msg.error.cantAdjustGridInfMaps=Cannot adjust grid on infinite maps.
msg.error.mustDisconnectFirst=You are connected to a server.  Please disconnect.
msg.error.fogexpose=Must be a GM to change the fog of war.
msg.error.failedLoadMap=Could not load map.
msg.error.failedSaveMap=Could not save map.
msg.error.failedLoadCampaign=Could not load campaign.
msg.error.failedSaveCampaign=Could not save campaign.
msg.error.failedSaveCampaignPreview=Could not save the campaign preview image.
msg.error.failedStartPersonalServer=Could not restart personal server.
msg.error.failedConnect=Could not connect to server.
msg.error.invalidLocalhost='localhost' is not a valid address?!  Check your /etc/hosts file.
msg.error.alreadyRunningServer=You are already running a server.
msg.error.alreadyRegistered=That ID is already in use -- server not registered.
msg.error.failedCannotRegisterServer=Unable to register your server.
msg.error.failedSavingMessageHistory=Could not save message history.
msg.error.failedAddingDefaultTables=Could not restore default tables.
msg.error.failedAddingDefaultImages=Could not restore default images.
msg.error.failedExportingCampaignRepo=Could not export campaign repository file.
msg.error.failedUpdatingCampaignRepo=Could not update campaign repository; I/O error.
msg.error.failedExportingImage=Could not export image.
msg.error.failedScreenCapture=Could not get screen capture.
msg.error.unknownHost=Unknown host
msg.error.lafSetup=Exception during look and feel setup
msg.error.loadingQuickMaps=Error loading quickmaps
msg.error.loadingIconImage=Could not load icon image
msg.error.credits=Unable to load credits or version
msg.error.layoutParse=Could not parse the layout file
msg.error.tableDoesNotExist=No such table
msg.error.tableUnknown=Unknown table
msg.error.tableAccessProhibited=The GM has disallowed player use of table
msg.error.fileNotFound=File Not found.
msg.error.noTokensSelected=No Tokens Selected.
msg.error.evaluatingExpr=Error evaluating expression: {0}
msg.error.cantApplyMacroToSelected=Commonality of this macro is not based on the command field.  The macro cannot be applied to the entire selection set.
# {0} is the player name
msg.error.playerNotConnected=Player "{0}" is not connected.

msg.confirm.overwriteExistingCampaign=That file already exists, overwrite?
msg.confirm.removeZone=Removing a map cannot be undone.\n\nAre you sure?
msg.confirm.newCampaign=Discard current campaign?
msg.confirm.hostingDisconnect=You are hosting a server.  Disconnecting will disconnect all connected clients.\n\nAre you sure?
msg.confirm.clearAllDrawings=Clearing all drawings cannot be undone.  Are you sure?
msg.confirm.removeFacings=Are you sure you want to delete the facing of the selected tokens?
msg.confirm.fileExists=Overwrite existing file?
msg.confirm.campaignExported=Campaign exported.
msg.confirm.saveCampaign=Would you like to save your campaign before you exit?
msg.confirm.disconnecting=You will be disconnected.  Are you sure you want to exit?
msg.confirm.legacySave=You are saving in an old format -- you may lose some information by doing this.  Continue?
msg.confirm.deleteToken=Are you sure you want to delete the selected tokens ?
msg.confirm.deleteToken.removed=This will no longer ask for permission when deleting tokens, if you want to turn this back on then look in Edit->Preferences.

# The only parameter is typically the player's name (as it appears in the Connection Explorer panel).
# Valid patterns used to express parameters are:
#	{num}		replace the parameter with a string
#	{num,type,size}
#			type can be 'time' or 'date' (for java.util.Date objects),
#				'number' to indicate a numeric type,
#			and size can be
#				'short', 'int', or 'long' for numeric arguments of the same type,
msg.confirm.bootPlayer=Are you sure you want to boot {0}?
msg.info.playerBooted={0} has been disconnected.
msg.info.playerDisconnected={0} is disconnected.
msg.info.playerConnected={0} has connected.
msg.confirm.renameMap=Rename "{0}"?
msg.error.versionFile=Can't find version file: {0}
msg.error.toolCannotInstantiate=Could not instantiate tool class: {0}
msg.error.toolConstructorFailed=Failed in constructor of tool: {0}
msg.error.toolNeedPublicConstructor=Constructor must be public for tool: {0}
msg.error.toolNeedValidConstructor=Constructor must have a public constructor with a Toolbox argument for tool: {0}
msg.confirm.aboutToBeginFTP=About to begin FTP process of {0,number,int} file(s)...
initPanel.displayMessage={0} has received initiative.
initPanel.enterState=Enter the initiative for {0}:

# I'm trying to add some consistency to the property names.  So...
# msg.title.* are strings used as the titles of dialogs and frames created by the application.
msg.title.loadMap=Load Map
msg.title.loadCampaign=Load Campaign
msg.title.saveCampaign=Save Campaign
msg.title.saveMessageHistory=Save Message History
msg.title.loadAssetTree=Load Asset Tree
msg.title.importProperties=Import Properties
msg.title.exportProperties=Export Properties
msg.title.exportMacro=Export Macro
msg.title.exportMacroSet=Export Macro Set
msg.title.importMacro=Import Macro
msg.title.importMacroSet=Import Macro Set

msg.title.messageDialogError=Error
msg.title.messageDialogWarning=Warning
msg.title.messageDialogInfo=Information
msg.title.messageDialogConfirm=Confirmation

#Just adding in some choices for messageDialogues
msg.title.messageDialog.yes=Yes
msg.title.messageDialog.cancel=Cancel
msg.title.messageDialog.dontAskAgain=Yes, and don't ask me again

msg.info.versionFile=CAN'T FIND VERSION FILE
msg.info.campaignSaved=Campaign Saved.
msg.info.campaignLoading=Loading Campaign
msg.info.campaignSaving=Saving Campaign
msg.info.mapSaved=Map Saved.
msg.info.mapLoading=Loading Map
msg.info.connecting=Connecting
msg.info.serverStarted=Server Started.
msg.info.disconnected=You have disconnected.
msg.info.showTransferWindow=Show Transfer Window
msg.info.screenshotSaving=Saving screenshot...
msg.info.screenshotSaved=Saved screenshot.
msg.info.noCampaignPreview=No campaign preview available.
msg.info.restoreLayout=Restore layout
### Why is the next line here when 'msg.info.serverStarted' already exists?
msg.info.startServer=Server started.

# These are not currently used.  Ideally, they would be the titles placed on the various
# dockable panels used by MapTool, but there are complications.  See the definition of
# MTFrame in the MapToolFrame class.
panel.Connections=Connections
panel.MapExplorer=Map Explorer
panel.Initiative=Initiative
panel.Library=Library
panel.Chat=Chat
panel.Tables=Tables
panel.Global=Global
panel.Campaign=Campaign
panel.Selected=Selected
panel.Selected.tooltip.selectAll=Select all tokens on the map
panel.Selected.tooltip.deslectAll=Deselect all tokens
panel.Selected.tooltip.revertToPrevious=Revert to previous selection
panel.Selected.tooltip.next=Select next token
panel.Selected.tooltip.previous=Select previous token
panel.Impersonate=Impersonate
panel.Impersonate.button.impersonateSelected=Impersonate Selected

file.ext.cmpgn=MapTool Campaign
file.ext.rpmap=MapTool Map
file.ext.rptok=MapTool Token
file.ext.mtprops=MapTool Campaign Properties
file.ext.mtmacro=MapTool Macro
file.ext.mtmacset=MapTool Macro Set

admin.exportCampaignRepo=Campaign Repository File...
admin.updateCampaignRepo=Update Campaign Repository...

tools.interaction.tooltip=Interaction Tools
tools.drawing.tooltip=Drawing Tools
tools.template.tooltip=Template Tools
tools.fog.tooltip=Fog of War Tools
tools.topo.tooltip=Vision Blocking Layer (VBL) Tools
tools.zoneselector.tooltip=Select Map

tool.blasttemplate.instructions=LClick: set starting cell, second LClick set's radius and direction; Ctrl move starting cell
tool.blasttemplate.tooltip=Draw a blast template
tool.bursttemplate.instructions=LClick: set center cell, second LClick set's radius; Ctrl move starting cell
tool.bursttemplate.tooltip=Draw a burst template
tool.cone.instructions=LClick: set initial point, second LClick set's radius and direction; Ctrl move point
tool.cone.tooltip=Draw a cone template
tool.facing.instructions=Unused
tool.facing.tooltip=Set the token facing
tool.filltopology.tooltip=Fill in closed areas of VBL
tool.freehand.instructions=LClick drag: draw freehand line, Shift LClick drag: erase freehand line
tool.freehand.tooltip=Draw freehand lines
tool.freehandexpose.instructions=LClick: lay initial/final point to expose, RClick (while drawing): set intermediate point, Shift LClick (initial): hide area
tool.freehandexpose.tooltip=Expose/Hide a freehand shape on the Fog of War
tool.gridtool.instructions=Left Click Drag: Move grid, Mouse Wheel: scale grid
tool.gridtool.tooltip=Show/Hide the map grid
tool.label.instructions=LClick: create a new label, RClick Drag: Move map, Wheel: Zoom
tool.label.tooltip=Add text label to map
tool.label.dialogtitle=Edit Label
tool.linetemplate.instructions=LClick: set initial point, second LClick determines path, third LClick set's length; Ctrl move last point set
tool.linetemplate.tooltip=Draw a line template
tool.line.instructions=LClick: lay initial/final point, RClick (while drawing): set intermediate point, Shift LClick (initial): erase line
tool.line.tooltip=Draw straight lines
tool.measure.instructions=LClick Drag: Measure cell distance; RClick Drag: Move map; Mouse Wheel: Zoom; Spacebar: Set waypoint
tool.measure.tooltip=Measure distance along path
tool.ovalexpose.instructions=LClick: set initial/final point to expose; Shift LClick: hide area; Hold Alt to draw from center
tool.ovalexpose.tooltip=Expose/Hide an oval on the Fog of War
tool.oval.instructions=LClick: set initial/final point; Shift LClick: start erase oval; Hold Alt to draw from center
tool.oval.tooltip=Draw an oval
tool.ovaltopology.instructions=LClick: set initial/final point; Shift LClick: start erase oval
tool.ovaltopology.tooltip=Draw an oval VBL
tool.ovaltopologyhollow.tooltip=Draw a hollow oval VBL
tool.pointer.instructions=LClick: Select; LClick Drag: Move selected; RClick: Menu; RClick Drag: Move map; Mouse Wheel: Zoom; Spacebar: Waypoint 
tool.pointer.tooltip=Pointer tool
tool.polyexpose.instructions=LClick: lay initial/final point to expose, RClick (while drawing): set intermediate point, Shift LClick (initial): hide area
tool.polyexpose.tooltip=Expose/Hide a polygon on the Fog of War
tool.poly.instructions=LClick: lay initial/final point, RClick (while drawing): set intermediate point, Shift LClick (initial): Erase poly area
tool.poly.tooltip=Draw closed polygon
tool.polytopo.tooltip=Draw closed polygon VBL
tool.polylinetopo.tooltip=Draw poly line VBL
tool.radiustemplate.instructions=LClick: set initial point, second LClick set's radius; Ctrl move center point
tool.radiustemplate.tooltip=Draw a radius template
tool.rectexpose.instructions=LClick: set initial/final point to expose; Shift LClick: hide rectangle; Hold Alt to draw from center
tool.rectexpose.tooltip=Expose/Hide a rectangle on the Fog of War
tool.rect.instructions=LClick: set initial/final point; Shift LClick: erase rectangle; Ctrl snaps to grid; Hold Alt to draw from center
tool.rect.tooltip=Draw a rectangle
tool.recttopology.instructions=LClick: set initial/final point; Shift LClick: erase rectangle; Ctrl snaps to grid
tool.recttopology.tooltip=Draw a rectangular VBL
tool.recttopologyhollow.tooltip=Draw a hollow rectangular VBL
tool.stamp.tooltip=Stamp tool
tool.walltemplate.instructions=LClick: set starting cell, move mouse in direction of wall, second LClick to finish wall; Ctrl move starting cell
tool.walltemplate.tooltip=Draw a wall template

defaultTool.stateMenu=&State
defaultTool.stateAction.clear=Clear State
defaultTool.barMenu=Bar
defaultTool.ownerMenu=Owner
defaultTool.visionMenu=Vision

lightDialog.ok=&OK
lightDialog.cancel=&Cancel
lightDialog.off=O&ff

# My campaign has the following states.  Putting their descriptions
# here is decidedly obscure. :)  There should be fields on the Campaign
# Properties' States tab for this instead.  Although it's questionable
# whether user-defined states need to be translated anyway!
#    AFK        Dead           Fly            Other4     Song
#    Bless      Deafened       Haste          Paralyzed  StableHP
#    Blind      Disabled       Hidden         Poisoned   Staggered
#    Bloody25   Dying          Incapacitated  Prayer     Stunned
#    Bloody50   EnergyDrained  Levitate       PrayerFOE  Turned
#    Bloody75   Enraged        Marked         Prone      Unconscious
#    Bloody100  Entangled      Other          Shield     Update
#    Confused   Fatigued       Other2         Sickened
#    Dazed      Fear           Other3         Slowed
defaultTool.stateAction.light=Light...
defaultTool.stateAction.AFK=Away From Keyboard
defaultTool.stateAction.AFK.accel=typed Pause
defaultTool.stateAction.StableHP=Stabilized

# Token Content Menu
token.popup.menu.halo=Halo
token.popup.menu.vision.overlay=Vision Overlay

# Initiative Panel
initPanel.round = Round:
initPanel.round.description = Reset the round counter and clear current initiative.
initPanel.toggleHold = Toggle Hold
initPanel.setInitState = Set Initiative...
initPanel.clearInitState = Clear Initiative
initPanel.showTokens = Show Tokens
initPanel.showTokenStates = Show Token States
initPanel.showInitStates = Show Initiative
initPanel.remove = Remove Token
initPanel.menuButton = Next
initPanel.enterStateMany = Enter the initiative for the selected tokens:
initPanel.sort = Sort
initPanel.addAll = Add All
initPanel.addPCs = Add PCs
initPanel.removeAll = Remove All
initPanel.toggleHideNPCs = Hide NPCs
initPanel.toggleOwnerPermissions = Owner Permissions
initPanel.moveUp = Move Up
initPanel.moveDown = Move Down
initPanel.center = Center On Map
initPanel.toggleMovementLock = Lock Movement
initPanel.initStateSecondLine = Initiative on 2nd Line
initPanel.makeCurrent = Make Current

# Initiative menu on the token popup.
initiative.menu = Initiative
initiative.menu.add = Add
initiative.menu.addToInitiative = Add To Initiative
initiative.menu.remove = Remove
initiative.menu.hold = Hold
initiative.menu.resume = Resume
initiative.menu.setState = Set Initiative...
initiative.menu.enterState = Set the initiative for selected tokens:
initiative.menu.clearState = Clear Initiative

# Lookup table editor controls tool tips
editLookupTable.tooltip.visible = Selecting this box will allow players to see this table in their Tables panel.
editLookupTable.tooltip.allowLookup = Selecting this box prevents players from executing a lookup against this table (i.e. by double-click, macro function, or /tbl command).
#
# Externalized strings for Macro Functions errors
#
# Unless otherwise specified {0} is the name of the function that was called
#

# General messages used in several functions.
macro.function.general.noPerm =You do not have permission to call the {0} function.
macro.function.general.noPermOther =You do not have permission to access another token in the {0} function.
macro.function.general.onlyGM =Only the GM can call the {0} function.
macro.function.general.notEnoughParam =Not enough parameters for function {0}.
macro.function.general.unknownFunction=Unknown function name {0}.
macro.function.general.noImpersonated=Error executing {0} there is no impersonated token.
macro.function.general.unknownToken=Error executing {0} there is no unknown token name or id {1}.
# {0} = function name, {1} = argument number
macro.function.general.argumentTypeT=Argument number {1} to function {0} must be a Token id or name.
macro.function.general.argumentTypeS=Argument number {1} to function {0} must be a string.
macro.function.general.argumentTypeN=Argument number {1} to function {0} must be a number.
macro.function.general.argumentTypeI=Argument number {1} to function {0} must be an integer.
macro.function.general.argumentTypeA=Argument number {1} to function {0} must be a JSON Array.
macro.function.general.argumentTypeO=Argument number {1} to function {0} must be a JSON Object.
macro.function.general.argumentTypeJ=Argument number {1} to function {0} must be a JSON Array or Object.
macro.function.general.argumentTypeInvalid=Argument number {1} nvalid argument type for function {0}.


# {1} is the token name or id
macro.function.general.unknownToken=Error executing {0} unknown token {1}.

# abort Function
macro.function.abortFunction.messge ={0} function called.

# addAllToInitiativeFunction
macro.function.addAllToInitiativeFunction.mustBeGM =Only the GM has the permission to execute the {0} function.

# assert Function 
# {0} is the error message specified when calling assert() for message
macro.function.assert.message =Macro-defined error: {0}
macro.function.assert.mustBeString =Second argument to {0}, {1} must be of type String .

# Initiative functions general errors
macro.function.initiative.gmOnly=Only the GM can perform {0}.
macro.function.initiative.gmOrOwner=Only the GM or owner can perform {0}.
macro.function.initiative.oneParam =Must call {0} with one parameter.
macro.function.initiative.noImpersonated=Error executing initiative function, there is no impersonated token.
macro.function.initiative.unknownToken=Unknown token id {0} on map {1}.


# DefineMacroFunctions
macro.function.defineFunction.notEnoughParam =Not enough parameters for define function.
macro.function.defineFunction.functionDefined ={0} function defined.

# FindTokenFunctions
macro.function.findTokenFunctions.offsetArray=Offset array for Area must contain json object with x,y co-ordinates in function {0}.


# InitiativeRoundFunctions
macro.function.getInitiativeRound.mustBeGM=Only the GM can set the round.

# LookupTableFunctions
macro.function.LookupTableFunctions.unknownTable=Unknown table name {1} in function {0}.
macro.function.LookupTableFunctions.noImage=No Image available in function {0} for table {1}.
macro.function.LookupTableFunctions.invalidSize=Invalid image size in function {0}.

# MacroArgsFunctions
macro.function.args.incorrectParam=Function {0} must be called with exactly 1 numeric parameter.
macro.function.args.outOfRange=Argument index {1} out of range (max = {2}) in function {0}.

# MacroLinkFunctions
macro.function.macroLink.missingName=Missing macro name in function {0}.
# {0} is the error message
macro.function.macroLink.errorRunning=Error Running Macro Link: {0}

# Token Halo functions {0} is the color
macro.function.haloFunctions.invalidColor=Invalid halo color {0}.



# StateImageFunction {1} is the state name
macro.function.stateImage.unknownState=Unknown state {1} in function {0}.
macro.function.stateImage.notImage=State {1} is not an image state in function {0}.

# number function
macro.function.number.invalid=Invalid number format {1} in {0}.

# TokenInitFunctions
macro.function.TokenInit.notOnListSet=The token is not in the initiative list so no value can be set.
macro.function.TokenInit.notOnList=The token is not in the initiative list.

# TokenPropertyFunctions
macro.function.tokenProperty.invalidSize=Invalid Token size {1} in function {0}.
macro.function.tokenProperty.unknownLayer=Unknown layer {1} in function {0}.
macro.function.tokenProperty.unknownPropType=Unknown property type {1} in function {0}.
macro.function.tokenProperty.unknownLibToken=Unknown Lib: token {1} in function {0}.


# TokenStateFunctions {0} is the state name.
macro.function.tokenStateFunctions.unknownState=Unknown state {0}.

# moveTokenToMap/moveTokenFromMap, {0} is the function name, {1} is the map name or token id
macro.function.moveTokenMap.unknownMap=Can not find map {1} in function {0}.
macro.function.moveTokenMap.unknownToken=Can not find token {1} in function {0}.
# {0} is the token name/id, {1} is the map its moved to.
macro.function.moveTokenMap.movedToken=Moved Token {0} to {1}.
# {0} is the function name
macro.function.moveTokenMap.alreadyThere=Can not use {0} to move Tokens to a map that they are already on.

# Token Distance functions, {0} is the metric that was specified.
macro.function.getDistance.invalidMetric=Invalid Metric type {0}.

#input function
macro.function.input.invalidSpecifier=Empty variable name in the specifier string "{0}".
macro.function.input.invalidType=Invalid input type "{0}" in the specifier string "{1}".
macro.function.input.invalidTAB=To use inputType of TAB in input(), the first entry must have the TAB type.
# {0} = the option key, {1} = the option value, {2} = the option type,  {3} = the option specifier
macro.function.input.invalidOptionType=The option "{0}={1}" is invalid for input type "{2}" in specifier "{3}".
macro.function.input.illegalArgumentType=Illegal argument type {0}, expecting {1}.

# General JSON macro function errors
macro.function.json.onlyArray={0} only accepts JSON Arrays.
macro.function.json.onlyObject={0} only accepts JSON Objects.
macro.function.json.onlyJSON={0} only accepts JSON Arrays or Objects.
macro.function.json.append.onlyArray=You can only append to the end of JSON Arrays.
macro.function.json.unknownType=Unknown JSON type in function {0}.
macro.function.json.getInvalidStartIndex=Invalid Start index {1} for array (size = {2}) in function {1}.
macro.function.json.getInvalidEndIndex=Invalid End index {1} for array (size = {2}) in function {1}.
macro.function.json.setNoMatchingValue=No matching value for key in {0}.
macro.function.json.notAllContainKey=Not all objects contain field {0} in json.sort.
macro.function.json.arrayMustContainObjects=Fields specified for json.sort but not all items in array are JSON objects.


# String List
macro.function.strLst.incorrectParamExact={0} requires exactly {1} parameters.
macro.function.strLst.incorrectParam={0} requires between {1} and {2} parameters.
# {0} = function name, {1} = argument number, {2} = expected type, {3} = value user passed, {4} = type of the value user passed.
macro.function.strLst.incorrectParamType={0} argument number {1} must be type {2}, but was passed "{3}" of type {4}.

# String Property
#{0} = value the user passed.
macro.function.varsFromstrProp.wrongArgs=varsFromStrProp called with 3 arguments, but second argument "{0}" was not one of NONE, SUFFIXED, or UNSUFFIXED.
macro.function.strPropFromVar.wrongArgs=strPropFromVars second parameter "{0}" is invalid.


# [token():...] roll option
macro.function.roll.noPerm=You do not have enough permissions to run the [token(...): ...] roll command.

# MapToolLineParser errors
lineParser.maxRecursion=Max recurse limit reached.
#{0} = the error, {1} = the expression
lineParser.errorExecutingExpression={0} error executing expression {1}.
lineParser.notValidVariableName="{0}" is not a valid variable name.
lineParser.notValidNumber="{0}" is not a valid number.
lineParser.rollOptionComma=Roll option list can't end with a comma.
lineParser.countNonNeg=Count option requires a non negative number, got {0}.
#{0} = the option (e.g. FOR, COUNT), {1} = error message.
lineParser.errorProcessingOpt=Error processing {0} option: {1}.
lineParser.nonDefLoopSep=To specify a non-default loop separator, you must use the format FOR(var,start,end,step,separator)
lineParser.forVarMissing=FOR variable missing.
lineParser.forNoZeroStep=Step size for FOR loop can not be zero.
lineParser.forVarMissing=FOREACH variable missing.
lineParser.badOptionFound=Bad option found! Options String = {0}, Roll String = {1}.
lineParser.errorStmtOpts=Statement options (if any)
lineParser.errorStmtBody=Statement Body 
lineParser.errorStmtBodyFirst200=Statement Body (first 200 characters)

# {0} is the roll options string.
lineParser.badRollOpt=Bad Roll option {0}.
lineParser.unknownOptionName=Unknown option name "{0}".
lineParser.optRequiresParam=Roll option "{0}" requires a list of no more than {1} parameters in parentheses.
lineParser.optBadParam=Roll option {0}: bad option parameters {1}.
lineParser.optWrongParam=Roll option {0} must have between {1} and {2} parameters; found {3}: parameter list = {4}
lineParser.tooManyLoops=Too many loop iterations (possible infinite loop?)
lineParser.invalidWhile=Invalid condition in WHILE({0}) roll option.
lineParser.invalidCondition=Invalid condition in {0}({1}) roll option.
lineParser.errorBodyRoll=Error in body of roll.
lineParser.invalidIfCond=Invalid IF condition: {0}, evaluates to: {1}.
lineParser.ifError=Error in roll for IF option.
lineParser.switchNoMatch=SWITCH option found no match for {0}.
lineParser.switchError=Error in roll for SWITCH option.
lineParser.invalidExpr=Invalid expression: {0}.
lineParser.invalidMacroLoc=Must specify a location for the macro "{0}" to be run from. 
lineParser.atTokenNotFound=Macro not found {0}@token.
lineParser.unknownCampaignMacro=Unknown campaign macro {0}.
lineParser.unknownGlobalMacro=Unknown global macro {0}.
lineParser.unknownMacro=Unknown macro {0}.
lineParser.unknownLibToken=Unknown library token {0}.
lineParser.notALibToken=Macros from other tokens are only available if the token name starts with "Lib:".
lineParser.libUnableToExec=Unable to execute macro from {0}.
lineParser.duplicateLibTokens=Duplicate {0} tokens found.

# Map Tool Variable Resolver
lineParser.onlyGMCanGet=Only GM can get {0}.
lineParser.onlyGMCanSet=Only GM can set {0}.
lineParser.unresolvedValue=Unresolved value {0}.
# {0} = token name or gm name.
lineParser.dialogTitle=Input Value for {0}.

# Macro Link
macroLink.error.running=Error running macro link.


# Informational messages for Macro functions.

macro.function.macroLink.autoExecToolTip=Auto Execute Macro Link
macro.function.macroLink.arguments=Arguments
macro.function.macroLink.executeOn=Execute On
macro.function.macroLink.selected=Selected Tokens
macro.function.macroLink.impersonated=Impersonated Tokens
macro.function.macroLink.unknown=Unknown

lineParser.dialogTitleNoToken=Input Value.
lineParser.dialogValueFor=Value For


#
# Slash Command errors
#
# {0} is the command
slash.mustBeGM=You must be a GM to use /{0}

# {0} is the command, {1} is the exception
macromanager.couldNotExecute=Could not execute the command: {0}, exception = {1}
# {0} is the command
macromanager.tooManyResolves=Too many resolves running {0} perhaps an infinate loop?
macromanager.alias.indexNotFound=(error: {0} is not found)

roll.general.unknown=Unknown roll {0} use, #d#+#

addtokenstate.param=A token state name and overlay name are required.
# {0} is the name of the state
addtokenstate.exists=A token state with the name "{0}" already exists.
# {0} is the overlay
addtokenstate.noOverlyType=There is no overlay type with the name "{0}". Valid types are "dot, circle, shade, X, cross, diamond, yield or triangle".
addtokenstate.added=Token state "{0}" was added
# {0} is the color name.
addtokenstate.invalidColor=An invalid color "{0}" was passed as a parameter. Valid values are hex or integer numbers or the name of a common color (black, blue, cyan, darkgray, gray, green, lightgray, magenta, orange, pink, red, white, yellow
addtokenstate.invalidNumber=An invalid number "{0}" was passed as a parameter.
addtokenstate.invalidCorner=An invalid corner name "{0}" was passed as a parameter. Valid values are nw, ne, sw, se

impersonate.mustOwn=You can only impersonate tokens that you own.

# {0} is the file name
loadaliases.cantFindFile=Could not find alias file: {0}
# {0} is the error message
loadaliases.couldNotLoad=Could not load alias file: {0}

# {0} is the file name
loadtokenstates.cantFindFile=Could not find token states file: {0}
# {0} is the error message
loadtokenstates.couldNotLoad=Could not load token states file: {0}


lookuptable.specifyTable=Must specify a table
lookuptable.couldNotPerform=Could not do table lookup: {0}

# {0} is the error message
savealiases.couldNotSave=Could not save alias file: {0}

# {0} is the error message
savetokenstates.couldNotSave=Could not save token states file: {0}

settokenproperty.param=You must specify a token name and an expression, or select token(s) and supply an expression.
settokenproperty.unknownTokens=Unable to determine which tokens to set the property of.

settokenstate.unknownTokens=Unable to determine which tokens to set the state of.
settokenstate.param=A token state name and token name, or a selected token and state name are required.
settokenstate.unknownState=Unknown state name "{0}".

undefinedmacro.unknownCommand="{0}" Unknown command.  Try /help for a list of commands.

whisper.noName=Must supply a player name.
whisper.toSelf=Talking to yourself again?

#
# Slash command info
#
addtokenstate.desc=Add a new token state that can be set on tokens.

alias.desc=Create an alias.
alias.added=Alias "{0}" added.
alias.removed=Alias "{0}" removed.
alias.header=Alias
alias.commandHeader=Command

changecolor.desc=Change your chat text color via macros.  Color must be in Hexadecimal format.  Example: /cc #ff0099

clearaliases.desc=Clear all aliases.
clearaliases.prompt=Clear all aliases?

clear.desc=Clear the message panel.

emit.desc=Broadcast text to all connected players without indicating who sent it (GM only command).

emote.desc=Broadcast an emote to all connected players.

emoteplural.desc=Broadcast plural emote to all connected players.

goto.desc=Goto location or token. /goto X,Y or /goto <tokenname>.
help.desc=Display list of available commands.
# Next three are for the titles generated in the table of commands in /help
help.header.command=Slash Command
help.header.aliases=Aliases
help.header.description=Description

impersonate.desc=Speak as if you were something/one else.

loadaliases.desc=Load a file that contains aliases, one per line, with a : between the name and the value (just as if you were typing it in).
loadaliases.dialogTitle=Load Aliases
loadaliases.loading=Loading aliases:
loadaliases.ignoring=Ignoring alias "{0}"

loadtokenstates.desc=Load all of the token states from a file.
loadtokenstates.dialogTitle=Load Token States
# {0} is the number of states loaded
loadtokenstates.loaded=There were {0} token states loaded.

lookuptable.desc=Run a table lookup. Usage: /tbl &lt;table name*gt; [value to lookup, can be a dice roll]

ooc.desc=Out Of Character chat

roll.desc=Roll and broadcast the result to all connected players.
# {0} is the players name, {1} is the roll
roll.string={0} rolls: {1}

rollgm.desc=Roll and broadcast the result to only the gm.
# {0} is the players name, {1} is the roll
rollgm.gm.string={0} rolls to you: {1}
# {0} is the roll
rollgm.self.string=You roll to the GM: {0}

rollme.desc=Roll and only show me the result.
# {0} is the roll
rollme.string=You roll to yourself: {0}

rollsecret.desc=Roll and broadcast the result to only the gm and hide the result even from yourself.
# {0} is the sender {1} is the roll
rollsecret.gm.string={0} rolls secretly to you: {1}
rollsecret.self.string=You roll secretly to the GM.
# When the gm does /rollsecret. {0} is the roll.
rollsecret.gmself.string=You roll secretly: {0}

tmacro.desc=Run the given macro on the currently selected tokens.

tokenspeech.desc=Say the given speech on the currently selected tokens.

savealiases.desc=Save all current aliases to a file.  See loadaliases to load them back in.
savealiases.dialogTitle=Save Aliases
savealiases.created=MapTool Aliases - created 
savealiases.saved=Aliases Saved.

savetokenstates.desc=Save the current set of token states to a file.
savetokenstates.dialogTitle=Save Token States
# {0} is the number of token states saved.
savetokenstates.saved=There were {0} token states saved.

say.desc=Broadcast a message to all connected players.

self.desc=Send a message only to yourself.

settokenproperty.text=Set the property of a token.

settokenstate.text=Set a state value on a token.
# {0} is the token name, {1} is the state name
settokenstate.marked=Token {0} now has {1} set.
settokenstate.unmarked=Token {0} now has {1} reset.

togm.desc=Send to GMs exclusively.
# {0} is the name of the sender, what to say is appended internally to close off HTML tags.
togm.saysToGM={0} says to the GM:
# {0} is what to say
togm.self=You say to the GM: {0}


whisper.desc=Send a message to a specific player.
# {0} is the name, {1} is the message
whisper.string={0} whispers: {1}
whisper.you.string=You whisper to {0}: {1}

whisperreply.desc=Reply to the last player to whisper to you.

